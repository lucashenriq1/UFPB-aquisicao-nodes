{"ast":null,"code":"var DuplexStream = require('readable-stream/duplex'),\n  util = require('util'),\n  Buffer = require('safe-buffer').Buffer;\nfunction BufferList(callback) {\n  if (!(this instanceof BufferList)) return new BufferList(callback);\n  this._bufs = [];\n  this.length = 0;\n  if (typeof callback == 'function') {\n    this._callback = callback;\n    var piper = function piper(err) {\n      if (this._callback) {\n        this._callback(err);\n        this._callback = null;\n      }\n    }.bind(this);\n    this.on('pipe', function onPipe(src) {\n      src.on('error', piper);\n    });\n    this.on('unpipe', function onUnpipe(src) {\n      src.removeListener('error', piper);\n    });\n  } else {\n    this.append(callback);\n  }\n  DuplexStream.call(this);\n}\nutil.inherits(BufferList, DuplexStream);\nBufferList.prototype._offset = function _offset(offset) {\n  var tot = 0,\n    i = 0,\n    _t;\n  if (offset === 0) return [0, 0];\n  for (; i < this._bufs.length; i++) {\n    _t = tot + this._bufs[i].length;\n    if (offset < _t || i == this._bufs.length - 1) return [i, offset - tot];\n    tot = _t;\n  }\n};\nBufferList.prototype.append = function append(buf) {\n  var i = 0;\n  if (Buffer.isBuffer(buf)) {\n    this._appendBuffer(buf);\n  } else if (Array.isArray(buf)) {\n    for (; i < buf.length; i++) this.append(buf[i]);\n  } else if (buf instanceof BufferList) {\n    // unwrap argument into individual BufferLists\n    for (; i < buf._bufs.length; i++) this.append(buf._bufs[i]);\n  } else if (buf != null) {\n    // coerce number arguments to strings, since Buffer(number) does\n    // uninitialized memory allocation\n    if (typeof buf == 'number') buf = buf.toString();\n    this._appendBuffer(Buffer.from(buf));\n  }\n  return this;\n};\nBufferList.prototype._appendBuffer = function appendBuffer(buf) {\n  this._bufs.push(buf);\n  this.length += buf.length;\n};\nBufferList.prototype._write = function _write(buf, encoding, callback) {\n  this._appendBuffer(buf);\n  if (typeof callback == 'function') callback();\n};\nBufferList.prototype._read = function _read(size) {\n  if (!this.length) return this.push(null);\n  size = Math.min(size, this.length);\n  this.push(this.slice(0, size));\n  this.consume(size);\n};\nBufferList.prototype.end = function end(chunk) {\n  DuplexStream.prototype.end.call(this, chunk);\n  if (this._callback) {\n    this._callback(null, this.slice());\n    this._callback = null;\n  }\n};\nBufferList.prototype.get = function get(index) {\n  return this.slice(index, index + 1)[0];\n};\nBufferList.prototype.slice = function slice(start, end) {\n  if (typeof start == 'number' && start < 0) start += this.length;\n  if (typeof end == 'number' && end < 0) end += this.length;\n  return this.copy(null, 0, start, end);\n};\nBufferList.prototype.copy = function copy(dst, dstStart, srcStart, srcEnd) {\n  if (typeof srcStart != 'number' || srcStart < 0) srcStart = 0;\n  if (typeof srcEnd != 'number' || srcEnd > this.length) srcEnd = this.length;\n  if (srcStart >= this.length) return dst || Buffer.alloc(0);\n  if (srcEnd <= 0) return dst || Buffer.alloc(0);\n  var copy = !!dst,\n    off = this._offset(srcStart),\n    len = srcEnd - srcStart,\n    bytes = len,\n    bufoff = copy && dstStart || 0,\n    start = off[1],\n    l,\n    i;\n\n  // copy/slice everything\n  if (srcStart === 0 && srcEnd == this.length) {\n    if (!copy) {\n      // slice, but full concat if multiple buffers\n      return this._bufs.length === 1 ? this._bufs[0] : Buffer.concat(this._bufs, this.length);\n    }\n\n    // copy, need to copy individual buffers\n    for (i = 0; i < this._bufs.length; i++) {\n      this._bufs[i].copy(dst, bufoff);\n      bufoff += this._bufs[i].length;\n    }\n    return dst;\n  }\n\n  // easy, cheap case where it's a subset of one of the buffers\n  if (bytes <= this._bufs[off[0]].length - start) {\n    return copy ? this._bufs[off[0]].copy(dst, dstStart, start, start + bytes) : this._bufs[off[0]].slice(start, start + bytes);\n  }\n  if (!copy)\n    // a slice, we need something to copy in to\n    dst = Buffer.allocUnsafe(len);\n  for (i = off[0]; i < this._bufs.length; i++) {\n    l = this._bufs[i].length - start;\n    if (bytes > l) {\n      this._bufs[i].copy(dst, bufoff, start);\n      bufoff += l;\n    } else {\n      this._bufs[i].copy(dst, bufoff, start, start + bytes);\n      bufoff += l;\n      break;\n    }\n    bytes -= l;\n    if (start) start = 0;\n  }\n\n  // safeguard so that we don't return uninitialized memory\n  if (dst.length > bufoff) return dst.slice(0, bufoff);\n  return dst;\n};\nBufferList.prototype.shallowSlice = function shallowSlice(start, end) {\n  start = start || 0;\n  end = end || this.length;\n  if (start < 0) start += this.length;\n  if (end < 0) end += this.length;\n  var startOffset = this._offset(start),\n    endOffset = this._offset(end),\n    buffers = this._bufs.slice(startOffset[0], endOffset[0] + 1);\n  if (endOffset[1] == 0) buffers.pop();else buffers[buffers.length - 1] = buffers[buffers.length - 1].slice(0, endOffset[1]);\n  if (startOffset[1] != 0) buffers[0] = buffers[0].slice(startOffset[1]);\n  return new BufferList(buffers);\n};\nBufferList.prototype.toString = function toString(encoding, start, end) {\n  return this.slice(start, end).toString(encoding);\n};\nBufferList.prototype.consume = function consume(bytes) {\n  // first, normalize the argument, in accordance with how Buffer does it\n  bytes = Math.trunc(bytes);\n  // do nothing if not a positive number\n  if (Number.isNaN(bytes) || bytes <= 0) return this;\n  while (this._bufs.length) {\n    if (bytes >= this._bufs[0].length) {\n      bytes -= this._bufs[0].length;\n      this.length -= this._bufs[0].length;\n      this._bufs.shift();\n    } else {\n      this._bufs[0] = this._bufs[0].slice(bytes);\n      this.length -= bytes;\n      break;\n    }\n  }\n  return this;\n};\nBufferList.prototype.duplicate = function duplicate() {\n  var i = 0,\n    copy = new BufferList();\n  for (; i < this._bufs.length; i++) copy.append(this._bufs[i]);\n  return copy;\n};\nBufferList.prototype.destroy = function destroy() {\n  this._bufs.length = 0;\n  this.length = 0;\n  this.push(null);\n};\n(function () {\n  var methods = {\n    'readDoubleBE': 8,\n    'readDoubleLE': 8,\n    'readFloatBE': 4,\n    'readFloatLE': 4,\n    'readInt32BE': 4,\n    'readInt32LE': 4,\n    'readUInt32BE': 4,\n    'readUInt32LE': 4,\n    'readInt16BE': 2,\n    'readInt16LE': 2,\n    'readUInt16BE': 2,\n    'readUInt16LE': 2,\n    'readInt8': 1,\n    'readUInt8': 1\n  };\n  for (var m in methods) {\n    (function (m) {\n      BufferList.prototype[m] = function (offset) {\n        return this.slice(offset, offset + methods[m])[m](0);\n      };\n    })(m);\n  }\n})();\nmodule.exports = BufferList;","map":{"version":3,"names":["DuplexStream","require","util","Buffer","BufferList","callback","_bufs","length","_callback","piper","err","bind","on","onPipe","src","onUnpipe","removeListener","append","call","inherits","prototype","_offset","offset","tot","i","_t","buf","isBuffer","_appendBuffer","Array","isArray","toString","from","appendBuffer","push","_write","encoding","_read","size","Math","min","slice","consume","end","chunk","get","index","start","copy","dst","dstStart","srcStart","srcEnd","alloc","off","len","bytes","bufoff","l","concat","allocUnsafe","shallowSlice","startOffset","endOffset","buffers","pop","trunc","Number","isNaN","shift","duplicate","destroy","methods","m","module","exports"],"sources":["D:/UFPB/aquisição/hb/aquisicao/node_modules/mqtt-connection/node_modules/bl/bl.js"],"sourcesContent":["var DuplexStream = require('readable-stream/duplex')\n  , util         = require('util')\n  , Buffer       = require('safe-buffer').Buffer\n\n\nfunction BufferList (callback) {\n  if (!(this instanceof BufferList))\n    return new BufferList(callback)\n\n  this._bufs  = []\n  this.length = 0\n\n  if (typeof callback == 'function') {\n    this._callback = callback\n\n    var piper = function piper (err) {\n      if (this._callback) {\n        this._callback(err)\n        this._callback = null\n      }\n    }.bind(this)\n\n    this.on('pipe', function onPipe (src) {\n      src.on('error', piper)\n    })\n    this.on('unpipe', function onUnpipe (src) {\n      src.removeListener('error', piper)\n    })\n  } else {\n    this.append(callback)\n  }\n\n  DuplexStream.call(this)\n}\n\n\nutil.inherits(BufferList, DuplexStream)\n\n\nBufferList.prototype._offset = function _offset (offset) {\n  var tot = 0, i = 0, _t\n  if (offset === 0) return [ 0, 0 ]\n  for (; i < this._bufs.length; i++) {\n    _t = tot + this._bufs[i].length\n    if (offset < _t || i == this._bufs.length - 1)\n      return [ i, offset - tot ]\n    tot = _t\n  }\n}\n\n\nBufferList.prototype.append = function append (buf) {\n  var i = 0\n\n  if (Buffer.isBuffer(buf)) {\n    this._appendBuffer(buf);\n  } else if (Array.isArray(buf)) {\n    for (; i < buf.length; i++)\n      this.append(buf[i])\n  } else if (buf instanceof BufferList) {\n    // unwrap argument into individual BufferLists\n    for (; i < buf._bufs.length; i++)\n      this.append(buf._bufs[i])\n  } else if (buf != null) {\n    // coerce number arguments to strings, since Buffer(number) does\n    // uninitialized memory allocation\n    if (typeof buf == 'number')\n      buf = buf.toString()\n\n    this._appendBuffer(Buffer.from(buf));\n  }\n\n  return this\n}\n\n\nBufferList.prototype._appendBuffer = function appendBuffer (buf) {\n  this._bufs.push(buf)\n  this.length += buf.length\n}\n\n\nBufferList.prototype._write = function _write (buf, encoding, callback) {\n  this._appendBuffer(buf)\n\n  if (typeof callback == 'function')\n    callback()\n}\n\n\nBufferList.prototype._read = function _read (size) {\n  if (!this.length)\n    return this.push(null)\n\n  size = Math.min(size, this.length)\n  this.push(this.slice(0, size))\n  this.consume(size)\n}\n\n\nBufferList.prototype.end = function end (chunk) {\n  DuplexStream.prototype.end.call(this, chunk)\n\n  if (this._callback) {\n    this._callback(null, this.slice())\n    this._callback = null\n  }\n}\n\n\nBufferList.prototype.get = function get (index) {\n  return this.slice(index, index + 1)[0]\n}\n\n\nBufferList.prototype.slice = function slice (start, end) {\n  if (typeof start == 'number' && start < 0)\n    start += this.length\n  if (typeof end == 'number' && end < 0)\n    end += this.length\n  return this.copy(null, 0, start, end)\n}\n\n\nBufferList.prototype.copy = function copy (dst, dstStart, srcStart, srcEnd) {\n  if (typeof srcStart != 'number' || srcStart < 0)\n    srcStart = 0\n  if (typeof srcEnd != 'number' || srcEnd > this.length)\n    srcEnd = this.length\n  if (srcStart >= this.length)\n    return dst || Buffer.alloc(0)\n  if (srcEnd <= 0)\n    return dst || Buffer.alloc(0)\n\n  var copy   = !!dst\n    , off    = this._offset(srcStart)\n    , len    = srcEnd - srcStart\n    , bytes  = len\n    , bufoff = (copy && dstStart) || 0\n    , start  = off[1]\n    , l\n    , i\n\n  // copy/slice everything\n  if (srcStart === 0 && srcEnd == this.length) {\n    if (!copy) { // slice, but full concat if multiple buffers\n      return this._bufs.length === 1\n        ? this._bufs[0]\n        : Buffer.concat(this._bufs, this.length)\n    }\n\n    // copy, need to copy individual buffers\n    for (i = 0; i < this._bufs.length; i++) {\n      this._bufs[i].copy(dst, bufoff)\n      bufoff += this._bufs[i].length\n    }\n\n    return dst\n  }\n\n  // easy, cheap case where it's a subset of one of the buffers\n  if (bytes <= this._bufs[off[0]].length - start) {\n    return copy\n      ? this._bufs[off[0]].copy(dst, dstStart, start, start + bytes)\n      : this._bufs[off[0]].slice(start, start + bytes)\n  }\n\n  if (!copy) // a slice, we need something to copy in to\n    dst = Buffer.allocUnsafe(len)\n\n  for (i = off[0]; i < this._bufs.length; i++) {\n    l = this._bufs[i].length - start\n\n    if (bytes > l) {\n      this._bufs[i].copy(dst, bufoff, start)\n      bufoff += l\n    } else {\n      this._bufs[i].copy(dst, bufoff, start, start + bytes)\n      bufoff += l\n      break\n    }\n\n    bytes -= l\n\n    if (start)\n      start = 0\n  }\n\n  // safeguard so that we don't return uninitialized memory\n  if (dst.length > bufoff) return dst.slice(0, bufoff)\n\n  return dst\n}\n\nBufferList.prototype.shallowSlice = function shallowSlice (start, end) {\n  start = start || 0\n  end = end || this.length\n\n  if (start < 0)\n    start += this.length\n  if (end < 0)\n    end += this.length\n\n  var startOffset = this._offset(start)\n    , endOffset = this._offset(end)\n    , buffers = this._bufs.slice(startOffset[0], endOffset[0] + 1)\n\n  if (endOffset[1] == 0)\n    buffers.pop()\n  else\n    buffers[buffers.length-1] = buffers[buffers.length-1].slice(0, endOffset[1])\n\n  if (startOffset[1] != 0)\n    buffers[0] = buffers[0].slice(startOffset[1])\n\n  return new BufferList(buffers)\n}\n\nBufferList.prototype.toString = function toString (encoding, start, end) {\n  return this.slice(start, end).toString(encoding)\n}\n\nBufferList.prototype.consume = function consume (bytes) {\n  // first, normalize the argument, in accordance with how Buffer does it\n  bytes = Math.trunc(bytes)\n  // do nothing if not a positive number\n  if (Number.isNaN(bytes) || bytes <= 0) return this\n\n  while (this._bufs.length) {\n    if (bytes >= this._bufs[0].length) {\n      bytes -= this._bufs[0].length\n      this.length -= this._bufs[0].length\n      this._bufs.shift()\n    } else {\n      this._bufs[0] = this._bufs[0].slice(bytes)\n      this.length -= bytes\n      break\n    }\n  }\n  return this\n}\n\n\nBufferList.prototype.duplicate = function duplicate () {\n  var i = 0\n    , copy = new BufferList()\n\n  for (; i < this._bufs.length; i++)\n    copy.append(this._bufs[i])\n\n  return copy\n}\n\n\nBufferList.prototype.destroy = function destroy () {\n  this._bufs.length = 0\n  this.length = 0\n  this.push(null)\n}\n\n\n;(function () {\n  var methods = {\n      'readDoubleBE' : 8\n    , 'readDoubleLE' : 8\n    , 'readFloatBE'  : 4\n    , 'readFloatLE'  : 4\n    , 'readInt32BE'  : 4\n    , 'readInt32LE'  : 4\n    , 'readUInt32BE' : 4\n    , 'readUInt32LE' : 4\n    , 'readInt16BE'  : 2\n    , 'readInt16LE'  : 2\n    , 'readUInt16BE' : 2\n    , 'readUInt16LE' : 2\n    , 'readInt8'     : 1\n    , 'readUInt8'    : 1\n  }\n\n  for (var m in methods) {\n    (function (m) {\n      BufferList.prototype[m] = function (offset) {\n        return this.slice(offset, offset + methods[m])[m](0)\n      }\n    }(m))\n  }\n}())\n\n\nmodule.exports = BufferList\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}