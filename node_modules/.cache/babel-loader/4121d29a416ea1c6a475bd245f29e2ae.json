{"ast":null,"code":"var bl = require('bl'),\n  inherits = require('inherits'),\n  EE = require('events').EventEmitter,\n  Packet = require('./packet'),\n  constants = require('./constants');\nfunction Parser() {\n  if (!(this instanceof Parser)) {\n    return new Parser();\n  }\n  this._states = ['_parseHeader', '_parseLength', '_parsePayload', '_newPacket'];\n  this._resetState();\n}\ninherits(Parser, EE);\nParser.prototype._resetState = function () {\n  this.packet = new Packet();\n  this.error = null;\n  this._list = bl();\n  this._stateCounter = 0;\n};\nParser.prototype.parse = function (buf) {\n  if (this.error) {\n    this._resetState();\n  }\n  this._list.append(buf);\n  while ((this.packet.length != -1 || this._list.length > 0) && this[this._states[this._stateCounter]]() && !this.error) {\n    this._stateCounter++;\n    if (this._stateCounter >= this._states.length) {\n      this._stateCounter = 0;\n    }\n  }\n  return this._list.length;\n};\nParser.prototype._parseHeader = function () {\n  // there is at least one byte in the buffer\n  var zero = this._list.readUInt8(0);\n  this.packet.cmd = constants.types[zero >> constants.CMD_SHIFT];\n  this.packet.retain = (zero & constants.RETAIN_MASK) !== 0;\n  this.packet.qos = zero >> constants.QOS_SHIFT & constants.QOS_MASK;\n  this.packet.dup = (zero & constants.DUP_MASK) !== 0;\n  this._list.consume(1);\n  return true;\n};\nParser.prototype._parseLength = function () {\n  // there is at least one byte in the list\n  var bytes = 0,\n    mul = 1,\n    length = 0,\n    result = true,\n    current;\n  while (bytes < 5) {\n    current = this._list.readUInt8(bytes++);\n    length += mul * (current & constants.LENGTH_MASK);\n    mul *= 0x80;\n    if ((current & constants.LENGTH_FIN_MASK) === 0) {\n      break;\n    }\n    if (this._list.length <= bytes) {\n      result = false;\n      break;\n    }\n  }\n  if (result) {\n    this.packet.length = length;\n    this._list.consume(bytes);\n  }\n  return result;\n};\nParser.prototype._parsePayload = function () {\n  var result = false;\n\n  // Do we have a payload? Do we have enough data to complete the payload?\n  // PINGs have no payload\n  if (this.packet.length === 0 || this._list.length >= this.packet.length) {\n    this._pos = 0;\n    switch (this.packet.cmd) {\n      case 'connect':\n        this._parseConnect();\n        break;\n      case 'connack':\n        this._parseConnack();\n        break;\n      case 'publish':\n        this._parsePublish();\n        break;\n      case 'puback':\n      case 'pubrec':\n      case 'pubrel':\n      case 'pubcomp':\n        this._parseMessageId();\n        break;\n      case 'subscribe':\n        this._parseSubscribe();\n        break;\n      case 'suback':\n        this._parseSuback();\n        break;\n      case 'unsubscribe':\n        this._parseUnsubscribe();\n        break;\n      case 'unsuback':\n        this._parseUnsuback();\n        break;\n      case 'pingreq':\n      case 'pingresp':\n      case 'disconnect':\n        // these are empty, nothing to do\n        break;\n      default:\n        this._emitError(new Error('not supported'));\n    }\n    result = true;\n  }\n  return result;\n};\nParser.prototype._parseConnect = function () {\n  var protocolId // constants id\n    ,\n    clientId // Client id\n    ,\n    topic // Will topic\n    ,\n    payload // Will payload\n    ,\n    password // Password\n    ,\n    username // Username\n    ,\n    flags = {},\n    packet = this.packet;\n\n  // Parse constants id\n  protocolId = this._parseString();\n  if (protocolId === null) return this._emitError(new Error('cannot parse protocol id'));\n  if (protocolId != 'MQTT' && protocolId != 'MQIsdp') {\n    return this._emitError(new Error('invalid protocol id'));\n  }\n  packet.protocolId = protocolId;\n\n  // Parse constants version number\n  if (this._pos >= this._list.length) return this._emitError(new Error('packet too short'));\n  packet.protocolVersion = this._list.readUInt8(this._pos);\n  if (packet.protocolVersion != 3 && packet.protocolVersion != 4) {\n    return this._emitError(new Error('invalid protocol version'));\n  }\n  this._pos++;\n  if (this._pos >= this._list.length) return this._emitError(new Error('packet too short'));\n\n  // Parse connect flags\n  flags.username = this._list.readUInt8(this._pos) & constants.USERNAME_MASK;\n  flags.password = this._list.readUInt8(this._pos) & constants.PASSWORD_MASK;\n  flags.will = this._list.readUInt8(this._pos) & constants.WILL_FLAG_MASK;\n  if (flags.will) {\n    packet.will = {};\n    packet.will.retain = (this._list.readUInt8(this._pos) & constants.WILL_RETAIN_MASK) !== 0;\n    packet.will.qos = (this._list.readUInt8(this._pos) & constants.WILL_QOS_MASK) >> constants.WILL_QOS_SHIFT;\n  }\n  packet.clean = (this._list.readUInt8(this._pos) & constants.CLEAN_SESSION_MASK) !== 0;\n  this._pos++;\n\n  // Parse keepalive\n  packet.keepalive = this._parseNum();\n  if (packet.keepalive === -1) return this._emitError(new Error('packet too short'));\n\n  // Parse client ID\n  clientId = this._parseString();\n  if (clientId === null) return this._emitError(new Error('packet too short'));\n  packet.clientId = clientId;\n  if (flags.will) {\n    // Parse will topic\n    topic = this._parseString();\n    if (topic === null) return this._emitError(new Error('cannot parse will topic'));\n    packet.will.topic = topic;\n\n    // Parse will payload\n    payload = this._parseBuffer();\n    if (payload === null) return this._emitError(new Error('cannot parse will payload'));\n    packet.will.payload = payload;\n  }\n\n  // Parse username\n  if (flags.username) {\n    username = this._parseString();\n    if (username === null) return this._emitError(new Error('cannot parse username'));\n    packet.username = username;\n  }\n\n  // Parse password\n  if (flags.password) {\n    password = this._parseBuffer();\n    if (password === null) return this._emitError(new Error('cannot parse username'));\n    packet.password = password;\n  }\n  return packet;\n};\nParser.prototype._parseConnack = function () {\n  var packet = this.packet;\n  if (this._list.length < 2) return null;\n  packet.sessionPresent = !!(this._list.readUInt8(this._pos++) & constants.SESSIONPRESENT_MASK);\n  packet.returnCode = this._list.readUInt8(this._pos);\n  if (packet.returnCode === -1) return this._emitError(new Error('cannot parse return code'));\n};\nParser.prototype._parsePublish = function () {\n  var packet = this.packet;\n  packet.topic = this._parseString();\n  if (packet.topic === null) return this._emitError(new Error('cannot parse topic'));\n\n  // Parse message ID\n  if (packet.qos > 0) {\n    if (!this._parseMessageId()) {\n      return;\n    }\n  }\n  packet.payload = this._list.slice(this._pos, packet.length);\n};\nParser.prototype._parseSubscribe = function () {\n  var packet = this.packet,\n    topic,\n    qos;\n  if (packet.qos != 1) {\n    return this._emitError(new Error('wrong subscribe header'));\n  }\n  packet.subscriptions = [];\n  if (!this._parseMessageId()) {\n    return;\n  }\n  while (this._pos < packet.length) {\n    // Parse topic\n    topic = this._parseString();\n    if (topic === null) return this._emitError(new Error('Parse error - cannot parse topic'));\n    if (this._pos >= packet.length) return this._emitError(new Error('Malformed Subscribe Payload'));\n    qos = this._list.readUInt8(this._pos++);\n\n    // Push pair to subscriptions\n    packet.subscriptions.push({\n      topic: topic,\n      qos: qos\n    });\n  }\n};\nParser.prototype._parseSuback = function () {\n  this.packet.granted = [];\n  if (!this._parseMessageId()) {\n    return;\n  }\n\n  // Parse granted QoSes\n  while (this._pos < this.packet.length) {\n    this.packet.granted.push(this._list.readUInt8(this._pos++));\n  }\n};\nParser.prototype._parseUnsubscribe = function () {\n  var packet = this.packet;\n  packet.unsubscriptions = [];\n\n  // Parse message ID\n  if (!this._parseMessageId()) {\n    return;\n  }\n  while (this._pos < packet.length) {\n    var topic;\n\n    // Parse topic\n    topic = this._parseString();\n    if (topic === null) return this._emitError(new Error('cannot parse topic'));\n\n    // Push topic to unsubscriptions\n    packet.unsubscriptions.push(topic);\n  }\n};\nParser.prototype._parseUnsuback = function () {\n  if (!this._parseMessageId()) return this._emitError(new Error('cannot parse message id'));\n};\nParser.prototype._parseMessageId = function () {\n  var packet = this.packet;\n  packet.messageId = this._parseNum();\n  if (packet.messageId === null) {\n    this._emitError(new Error('cannot parse message id'));\n    return false;\n  }\n  return true;\n};\nParser.prototype._parseString = function (maybeBuffer) {\n  var length = this._parseNum(),\n    result,\n    end = length + this._pos;\n  if (length === -1 || end > this._list.length || end > this.packet.length) return null;\n  result = this._list.toString('utf8', this._pos, end);\n  this._pos += length;\n  return result;\n};\nParser.prototype._parseBuffer = function () {\n  var length = this._parseNum(),\n    result,\n    end = length + this._pos;\n  if (length === -1 || end > this._list.length || end > this.packet.length) return null;\n  result = this._list.slice(this._pos, end);\n  this._pos += length;\n  return result;\n};\nParser.prototype._parseNum = function () {\n  if (this._list.length - this._pos < 2) return -1;\n  var result = this._list.readUInt16BE(this._pos);\n  this._pos += 2;\n  return result;\n};\nParser.prototype._newPacket = function () {\n  if (this.packet) {\n    this._list.consume(this.packet.length);\n    this.emit('packet', this.packet);\n  }\n  this.packet = new Packet();\n  return true;\n};\nParser.prototype._emitError = function (err) {\n  this.error = err;\n  this.emit('error', err);\n};\nmodule.exports = Parser;","map":{"version":3,"names":["bl","require","inherits","EE","EventEmitter","Packet","constants","Parser","_states","_resetState","prototype","packet","error","_list","_stateCounter","parse","buf","append","length","_parseHeader","zero","readUInt8","cmd","types","CMD_SHIFT","retain","RETAIN_MASK","qos","QOS_SHIFT","QOS_MASK","dup","DUP_MASK","consume","_parseLength","bytes","mul","result","current","LENGTH_MASK","LENGTH_FIN_MASK","_parsePayload","_pos","_parseConnect","_parseConnack","_parsePublish","_parseMessageId","_parseSubscribe","_parseSuback","_parseUnsubscribe","_parseUnsuback","_emitError","Error","protocolId","clientId","topic","payload","password","username","flags","_parseString","protocolVersion","USERNAME_MASK","PASSWORD_MASK","will","WILL_FLAG_MASK","WILL_RETAIN_MASK","WILL_QOS_MASK","WILL_QOS_SHIFT","clean","CLEAN_SESSION_MASK","keepalive","_parseNum","_parseBuffer","sessionPresent","SESSIONPRESENT_MASK","returnCode","slice","subscriptions","push","granted","unsubscriptions","messageId","maybeBuffer","end","toString","readUInt16BE","_newPacket","emit","err","module","exports"],"sources":["D:/UFPB/aquisição/hb/aquisicao/node_modules/mqtt-connection/node_modules/mqtt-packet/parser.js"],"sourcesContent":["\nvar bl        = require('bl')\n  , inherits  = require('inherits')\n  , EE        = require('events').EventEmitter\n  , Packet    = require('./packet')\n  , constants = require('./constants')\n\nfunction Parser() {\n  if (!(this instanceof Parser)) {\n    return new Parser()\n  }\n\n  this._states = [\n      '_parseHeader'\n    , '_parseLength'\n    , '_parsePayload'\n    , '_newPacket'\n  ]\n\n  this._resetState()\n}\n\ninherits(Parser, EE)\n\nParser.prototype._resetState = function () {\n  this.packet = new Packet()\n  this.error = null\n  this._list = bl()\n  this._stateCounter = 0\n}\n\nParser.prototype.parse = function (buf) {\n  if (this.error) {\n    this._resetState()\n  }\n\n  this._list.append(buf)\n\n  while ((this.packet.length != -1 || this._list.length > 0) &&\n         this[this._states[this._stateCounter]]() &&\n         !this.error) {\n    this._stateCounter++\n\n    if (this._stateCounter >= this._states.length) {\n      this._stateCounter = 0\n    }\n  }\n\n  return this._list.length\n}\n\nParser.prototype._parseHeader = function () {\n\n  // there is at least one byte in the buffer\n  var zero = this._list.readUInt8(0)\n  this.packet.cmd = constants.types[zero >> constants.CMD_SHIFT]\n  this.packet.retain = (zero & constants.RETAIN_MASK) !== 0\n  this.packet.qos = (zero >> constants.QOS_SHIFT) & constants.QOS_MASK\n  this.packet.dup = (zero & constants.DUP_MASK) !== 0\n\n  this._list.consume(1)\n\n  return true\n}\n\n\nParser.prototype._parseLength = function () {\n  // there is at least one byte in the list\n  var bytes    = 0\n    , mul      = 1\n    , length   = 0\n    , result   = true\n    , current\n\n  while (bytes < 5) {\n    current = this._list.readUInt8(bytes++)\n    length += mul * (current & constants.LENGTH_MASK)\n    mul *= 0x80\n\n    if ((current & constants.LENGTH_FIN_MASK) === 0) {\n      break\n    }\n\n    if (this._list.length <= bytes) {\n      result = false\n      break\n    }\n  }\n\n  if (result) {\n    this.packet.length = length\n    this._list.consume(bytes)\n  }\n\n  return result\n}\n\nParser.prototype._parsePayload = function () {\n  var result = false\n\n  // Do we have a payload? Do we have enough data to complete the payload?\n  // PINGs have no payload\n  if (this.packet.length === 0 || this._list.length >= this.packet.length) {\n\n    this._pos = 0\n\n    switch (this.packet.cmd) {\n      case 'connect':\n        this._parseConnect()\n        break\n      case 'connack':\n        this._parseConnack()\n        break\n      case 'publish':\n        this._parsePublish()\n        break\n      case 'puback':\n      case 'pubrec':\n      case 'pubrel':\n      case 'pubcomp':\n        this._parseMessageId()\n        break\n      case 'subscribe':\n        this._parseSubscribe()\n        break\n      case 'suback':\n        this._parseSuback()\n        break\n      case 'unsubscribe':\n        this._parseUnsubscribe()\n        break\n      case 'unsuback':\n        this._parseUnsuback()\n        break\n      case 'pingreq':\n      case 'pingresp':\n      case 'disconnect':\n        // these are empty, nothing to do\n        break\n      default:\n        this._emitError(new Error('not supported'))\n    }\n\n    result = true\n  }\n\n  return result\n}\n\nParser.prototype._parseConnect = function () {\n  var protocolId // constants id\n    , clientId // Client id\n    , topic // Will topic\n    , payload // Will payload\n    , password // Password\n    , username // Username\n    , flags = {}\n    , packet = this.packet\n\n  // Parse constants id\n  protocolId = this._parseString()\n  if (protocolId === null)\n    return this._emitError(new Error('cannot parse protocol id'))\n\n  if (protocolId != 'MQTT' && protocolId != 'MQIsdp') {\n\n    return this._emitError(new Error('invalid protocol id'))\n  }\n\n  packet.protocolId = protocolId\n\n  // Parse constants version number\n  if(this._pos >= this._list.length)\n    return this._emitError(new Error('packet too short'))\n\n  packet.protocolVersion = this._list.readUInt8(this._pos)\n\n  if(packet.protocolVersion != 3 && packet.protocolVersion != 4) {\n\n    return this._emitError(new Error('invalid protocol version'))\n  }\n\n  this._pos++\n  if(this._pos >= this._list.length)\n    return this._emitError(new Error('packet too short'))\n\n  // Parse connect flags\n  flags.username  = (this._list.readUInt8(this._pos) & constants.USERNAME_MASK)\n  flags.password  = (this._list.readUInt8(this._pos) & constants.PASSWORD_MASK)\n  flags.will      = (this._list.readUInt8(this._pos) & constants.WILL_FLAG_MASK)\n\n  if (flags.will) {\n    packet.will         = {}\n    packet.will.retain  = (this._list.readUInt8(this._pos) & constants.WILL_RETAIN_MASK) !== 0\n    packet.will.qos     = (this._list.readUInt8(this._pos) &\n                          constants.WILL_QOS_MASK) >> constants.WILL_QOS_SHIFT\n  }\n\n  packet.clean = (this._list.readUInt8(this._pos) & constants.CLEAN_SESSION_MASK) !== 0\n  this._pos++\n\n  // Parse keepalive\n  packet.keepalive = this._parseNum()\n  if(packet.keepalive === -1)\n    return this._emitError(new Error('packet too short'))\n\n  // Parse client ID\n  clientId = this._parseString()\n  if(clientId === null)\n    return this._emitError(new Error('packet too short'))\n  packet.clientId = clientId\n\n  if (flags.will) {\n    // Parse will topic\n    topic = this._parseString()\n    if (topic === null)\n      return this._emitError(new Error('cannot parse will topic'))\n    packet.will.topic = topic\n\n    // Parse will payload\n    payload = this._parseBuffer()\n    if (payload === null)\n      return this._emitError(new Error('cannot parse will payload'))\n    packet.will.payload = payload\n  }\n\n  // Parse username\n  if (flags.username) {\n    username = this._parseString()\n    if(username === null)\n      return this._emitError(new Error('cannot parse username'))\n    packet.username = username\n  }\n\n  // Parse password\n  if(flags.password) {\n    password = this._parseBuffer()\n    if(password === null)\n      return this._emitError(new Error('cannot parse username'))\n    packet.password = password\n  }\n\n  return packet\n}\n\nParser.prototype._parseConnack = function () {\n  var packet = this.packet\n  if (this._list.length < 2)\n    return null\n  packet.sessionPresent = !!(this._list.readUInt8(this._pos++) & constants.SESSIONPRESENT_MASK)\n  packet.returnCode = this._list.readUInt8(this._pos)\n  if(packet.returnCode === -1)\n    return this._emitError(new Error('cannot parse return code'))\n}\n\nParser.prototype._parsePublish = function () {\n  var packet = this.packet\n  packet.topic = this._parseString()\n\n  if(packet.topic === null)\n    return this._emitError(new Error('cannot parse topic'))\n\n  // Parse message ID\n  if (packet.qos > 0) {\n    if (!this._parseMessageId()) { return }\n  }\n\n  packet.payload = this._list.slice(this._pos, packet.length)\n}\n\nParser.prototype._parseSubscribe = function() {\n  var packet = this.packet\n    , topic\n    , qos\n\n  if (packet.qos != 1) {\n    return this._emitError(new Error('wrong subscribe header'))\n  }\n\n  packet.subscriptions = []\n\n  if (!this._parseMessageId()) { return }\n\n  while (this._pos < packet.length) {\n\n    // Parse topic\n    topic = this._parseString()\n    if (topic === null)\n      return this._emitError(new Error('Parse error - cannot parse topic'))\n\n    if (this._pos >= packet.length) return this._emitError(new Error('Malformed Subscribe Payload'))\n    qos = this._list.readUInt8(this._pos++)\n\n    // Push pair to subscriptions\n    packet.subscriptions.push({ topic: topic, qos: qos });\n  }\n}\n\nParser.prototype._parseSuback = function() {\n  this.packet.granted = []\n\n  if (!this._parseMessageId()) { return }\n\n  // Parse granted QoSes\n  while (this._pos < this.packet.length) {\n    this.packet.granted.push(this._list.readUInt8(this._pos++));\n  }\n}\n\nParser.prototype._parseUnsubscribe = function() {\n  var packet = this.packet\n\n  packet.unsubscriptions = []\n\n  // Parse message ID\n  if (!this._parseMessageId()) { return }\n\n  while (this._pos < packet.length) {\n    var topic;\n\n    // Parse topic\n    topic = this._parseString()\n    if (topic === null)\n      return this._emitError(new Error('cannot parse topic'))\n\n    // Push topic to unsubscriptions\n    packet.unsubscriptions.push(topic);\n  }\n}\n\nParser.prototype._parseUnsuback = function() {\n  if (!this._parseMessageId())\n    return this._emitError(new Error('cannot parse message id'))\n}\n\nParser.prototype._parseMessageId = function() {\n  var packet = this.packet\n\n  packet.messageId = this._parseNum()\n\n  if(packet.messageId === null) {\n    this._emitError(new Error('cannot parse message id'))\n    return false\n  }\n\n  return true\n}\n\nParser.prototype._parseString = function(maybeBuffer) {\n  var length = this._parseNum()\n    , result\n    , end = length + this._pos\n\n  if(length === -1 || end > this._list.length || end > this.packet.length)\n    return null\n\n  result = this._list.toString('utf8', this._pos, end)\n\n  this._pos += length\n\n  return result\n}\n\nParser.prototype._parseBuffer = function() {\n  var length = this._parseNum()\n    , result\n    , end = length + this._pos\n\n  if(length === -1 || end > this._list.length || end > this.packet.length)\n    return null\n\n  result = this._list.slice(this._pos, end)\n\n  this._pos += length\n\n  return result\n}\n\nParser.prototype._parseNum = function() {\n  if(this._list.length - this._pos < 2) return -1\n\n  var result = this._list.readUInt16BE(this._pos)\n  this._pos += 2\n  return result\n}\n\nParser.prototype._newPacket = function () {\n  if (this.packet) {\n    this._list.consume(this.packet.length)\n    this.emit('packet', this.packet)\n  }\n\n  this.packet = new Packet()\n\n  return true\n}\n\nParser.prototype._emitError = function(err) {\n  this.error = err\n  this.emit('error', err)\n}\n\nmodule.exports = Parser\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}