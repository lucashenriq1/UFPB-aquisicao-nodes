{"ast":null,"code":"import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || '').toLowerCase() : '';\n}\nlet uaString;\nfunction getUAString() {\n  if (uaString) {\n    return uaString;\n  }\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    uaString = uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n    return uaString;\n  }\n  return navigator.userAgent;\n}\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try and use feature detection here instead\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter; // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(value => css.willChange.includes(value)) || ['paint', 'layout', 'strict', 'content'].some(\n  // TS 4.1 compat\n  value => {\n    const contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\nfunction isLayoutViewport() {\n  // Not Safari\n  return !/^((?!chrome|android).)*safari/i.test(getUAString()); // Feature detection for this fails in various ways\n  // • Always-visible scrollbar or not\n  // • Width of <html>, etc.\n  // const vV = win.visualViewport;\n  // return vV ? Math.abs(win.innerWidth / vV.scale - vV.width) < 0.5 : true;\n}\n\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nconst FALLBACK_SCALE = {\n  x: 1,\n  y: 1\n};\nfunction getScale(element) {\n  const domElement = !isElement(element) && element.contextElement ? element.contextElement : isElement(element) ? element : null;\n  if (!domElement) {\n    return FALLBACK_SCALE;\n  }\n  const rect = domElement.getBoundingClientRect();\n  const css = getComputedStyle(domElement);\n  let x = rect.width / parseFloat(css.width);\n  let y = rect.height / parseFloat(css.height); // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  var _win$visualViewport$o, _win$visualViewport, _win$visualViewport$o2, _win$visualViewport2;\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  let scale = FALLBACK_SCALE;\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const win = isElement(element) ? getWindow(element) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  const x = (clientRect.left + (addVisualOffsets ? (_win$visualViewport$o = (_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) != null ? _win$visualViewport$o : 0 : 0)) / scale.x;\n  const y = (clientRect.top + (addVisualOffsets ? (_win$visualViewport$o2 = (_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) != null ? _win$visualViewport$o2 : 0 : 0)) / scale.y;\n  const width = clientRect.width / scale.x;\n  const height = clientRect.height / scale.y;\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, true, strategy === 'fixed', offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node\n  node.assignedSlot ||\n  // DOM Element detected\n  node.parentNode || (\n  // ShadowRoot detected\n  isShadowRoot(node) ? node.host : null) ||\n  // Fallback\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\nfunction getOffsetParent(element) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\nfunction getDimensions(element) {\n  if (isHTMLElement(element)) {\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    };\n  }\n  const rect = getBoundingClientRect(element);\n  return {\n    width: rect.width,\n    height: rect.height\n  };\n}\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } // This doesn't appear to need to be negated.\n    // else if (documentElement) {\n    //   offsets.x = getWindowScrollBarX(documentElement);\n    // }\n  }\n\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const layoutViewport = isLayoutViewport();\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nconst min = Math.min;\nconst max = Math.max;\n\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    // @ts-ignore assume body is always available\n    return node.ownerDocument.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\n\n// Returns the inner client rect, subtracting scrollbars if present\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y,\n    width,\n    height\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  if (clippingAncestor === 'viewport') {\n    return rectToClientRect(getViewportRect(element, strategy));\n  }\n  if (isElement(clippingAncestor)) {\n    return getInnerBoundingClientRect(clippingAncestor, strategy);\n  }\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\n\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element; // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const containingBlock = isContainingBlock(currentNode);\n    const shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors\n\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getScale,\n  async getElementRects(_ref) {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n    const getDimensionsFn = this.getDimensions;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n      floating: {\n        x: 0,\n        y: 0,\n        ...(await getDimensionsFn(floating))\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n    observer.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _observer;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\n\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };","map":{"version":3,"names":["rectToClientRect","computePosition","computePosition$1","arrow","autoPlacement","detectOverflow","flip","hide","inline","limitShift","offset","shift","size","getWindow","node","_node$ownerDocument","ownerDocument","defaultView","window","getComputedStyle","element","getNodeName","isNode","nodeName","toLowerCase","uaString","getUAString","uaData","navigator","userAgentData","Array","isArray","brands","map","item","brand","version","join","userAgent","isHTMLElement","value","HTMLElement","isElement","Element","Node","isShadowRoot","ShadowRoot","OwnElement","isOverflowElement","overflow","overflowX","overflowY","display","test","includes","isTableElement","isContainingBlock","isFirefox","css","backdropFilter","WebkitBackdropFilter","transform","perspective","willChange","filter","some","contain","isLayoutViewport","isLastTraversableNode","FALLBACK_SCALE","x","y","getScale","domElement","contextElement","rect","getBoundingClientRect","width","parseFloat","height","Number","isFinite","includeScale","isFixedStrategy","offsetParent","_win$visualViewport$o","_win$visualViewport","_win$visualViewport$o2","_win$visualViewport2","clientRect","scale","win","addVisualOffsets","left","visualViewport","offsetLeft","top","offsetTop","right","bottom","getDocumentElement","document","documentElement","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","getWindowScrollBarX","getRectRelativeToOffsetParent","strategy","isOffsetParentAnElement","scroll","offsets","offsetRect","clientLeft","clientTop","getParentNode","result","assignedSlot","parentNode","host","getTrueOffsetParent","position","getContainingBlock","currentNode","getOffsetParent","getDimensions","offsetWidth","offsetHeight","convertOffsetParentRelativeRectToViewportRelativeRect","_ref","getViewportRect","html","clientWidth","clientHeight","layoutViewport","min","Math","max","getDocumentRect","_element$ownerDocumen","body","scrollWidth","scrollHeight","direction","getNearestOverflowAncestor","getOverflowAncestors","list","scrollableAncestor","isBody","concat","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","getClippingElementAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","containingBlock","shouldDropCurrentNode","ancestor","set","getClippingRect","boundary","rootBoundary","elementClippingAncestors","_c","clippingAncestors","firstClippingAncestor","clippingRect","reduce","accRect","platform","getElementRects","reference","floating","getOffsetParentFn","getDimensionsFn","getClientRects","from","isRTL","autoUpdate","update","options","ancestorScroll","_ancestorScroll","ancestorResize","elementResize","animationFrame","ancestors","forEach","addEventListener","passive","observer","initialUpdate","ResizeObserver","observe","frameId","prevRefRect","frameLoop","nextRefRect","requestAnimationFrame","_observer","removeEventListener","disconnect","cancelAnimationFrame","Map","mergedOptions","platformWithCache"],"sources":["D:/UFPB/aquisição/hb/aquisicao/node_modules/@floating-ui/dom/dist/floating-ui.dom.esm.js"],"sourcesContent":["import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction getWindow(node) {\n  var _node$ownerDocument;\n\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\n\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || '').toLowerCase() : '';\n}\n\nlet uaString;\nfunction getUAString() {\n  if (uaString) {\n    return uaString;\n  }\n\n  const uaData = navigator.userAgentData;\n\n  if (uaData && Array.isArray(uaData.brands)) {\n    uaString = uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n    return uaString;\n  }\n\n  return navigator.userAgent;\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try and use feature detection here instead\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter; // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(value => css.willChange.includes(value)) || ['paint', 'layout', 'strict', 'content'].some( // TS 4.1 compat\n  value => {\n    const contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\nfunction isLayoutViewport() {\n  // Not Safari\n  return !/^((?!chrome|android).)*safari/i.test(getUAString()); // Feature detection for this fails in various ways\n  // • Always-visible scrollbar or not\n  // • Width of <html>, etc.\n  // const vV = win.visualViewport;\n  // return vV ? Math.abs(win.innerWidth / vV.scale - vV.width) < 0.5 : true;\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\n\nconst FALLBACK_SCALE = {\n  x: 1,\n  y: 1\n};\nfunction getScale(element) {\n  const domElement = !isElement(element) && element.contextElement ? element.contextElement : isElement(element) ? element : null;\n\n  if (!domElement) {\n    return FALLBACK_SCALE;\n  }\n\n  const rect = domElement.getBoundingClientRect();\n  const css = getComputedStyle(domElement);\n  let x = rect.width / parseFloat(css.width);\n  let y = rect.height / parseFloat(css.height); // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n\n  return {\n    x,\n    y\n  };\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  var _win$visualViewport$o, _win$visualViewport, _win$visualViewport$o2, _win$visualViewport2;\n\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n\n  const clientRect = element.getBoundingClientRect();\n  let scale = FALLBACK_SCALE;\n\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n\n  const win = isElement(element) ? getWindow(element) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  const x = (clientRect.left + (addVisualOffsets ? (_win$visualViewport$o = (_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) != null ? _win$visualViewport$o : 0 : 0)) / scale.x;\n  const y = (clientRect.top + (addVisualOffsets ? (_win$visualViewport$o2 = (_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) != null ? _win$visualViewport$o2 : 0 : 0)) / scale.y;\n  const width = clientRect.width / scale.x;\n  const height = clientRect.height / scale.y;\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, true, strategy === 'fixed', offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n\n  const result = // Step into the shadow DOM of the parent of a slotted node\n  node.assignedSlot || // DOM Element detected\n  node.parentNode || ( // ShadowRoot detected\n  isShadowRoot(node) ? node.host : null) || // Fallback\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n}\n\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nfunction getOffsetParent(element) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getDimensions(element) {\n  if (isHTMLElement(element)) {\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    };\n  }\n\n  const rect = getBoundingClientRect(element);\n  return {\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } // This doesn't appear to need to be negated.\n    // else if (documentElement) {\n    //   offsets.x = getWindowScrollBarX(documentElement);\n    // }\n\n  }\n\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const layoutViewport = isLayoutViewport();\n\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nconst min = Math.min;\nconst max = Math.max;\n\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n\n  if (isLastTraversableNode(parentNode)) {\n    // @ts-ignore assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\n\n// Returns the inner client rect, subtracting scrollbars if present\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y,\n    width,\n    height\n  };\n}\n\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  if (clippingAncestor === 'viewport') {\n    return rectToClientRect(getViewportRect(element, strategy));\n  }\n\n  if (isElement(clippingAncestor)) {\n    return getInnerBoundingClientRect(clippingAncestor, strategy);\n  }\n\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\n\n\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n\n  if (cachedResult) {\n    return cachedResult;\n  }\n\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element; // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const containingBlock = isContainingBlock(currentNode);\n    const shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position);\n\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n\n    currentNode = getParentNode(currentNode);\n  }\n\n  cache.set(element, result);\n  return result;\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors\n\n\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getScale,\n\n  async getElementRects(_ref) {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n    const getDimensionsFn = this.getDimensions;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n      floating: {\n        x: 0,\n        y: 0,\n        ...(await getDimensionsFn(floating))\n      }\n    };\n  },\n\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n\n    observer.observe(floating);\n  }\n\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n\n  if (animationFrame) {\n    frameLoop();\n  }\n\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n\n  update();\n  return () => {\n    var _observer;\n\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\n\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = { ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, { ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}