{"ast":null,"code":"'use strict';\n\nvar protocol = require('./constants'),\n  empty = new Buffer(0);\nfunction generate(packet) {\n  switch (packet.cmd) {\n    case 'connect':\n      return connect(packet);\n    case 'connack':\n      return connack(packet);\n    case 'publish':\n      return publish(packet);\n    case 'puback':\n    case 'pubrec':\n    case 'pubrel':\n    case 'pubcomp':\n    case 'unsuback':\n      return confirmation(packet);\n    case 'subscribe':\n      return subscribe(packet);\n    case 'suback':\n      return suback(packet);\n    case 'unsubscribe':\n      return unsubscribe(packet);\n    case 'pingreq':\n    case 'pingresp':\n    case 'disconnect':\n      return emptyPacket(packet);\n    default:\n      throw new Error('unknown command');\n  }\n}\nfunction connect(opts) {\n  var opts = opts || {},\n    protocolId = opts.protocolId || 'MQTT',\n    protocolVersion = opts.protocolVersion || 4,\n    will = opts.will,\n    clean = opts.clean,\n    keepalive = opts.keepalive || 0,\n    clientId = opts.clientId || \"\",\n    username = opts.username,\n    password = opts.password;\n  if (clean === undefined) {\n    clean = true;\n  }\n  var length = 0;\n\n  // Must be a string and non-falsy\n  if (!protocolId || typeof protocolId !== \"string\" && !Buffer.isBuffer(protocolId)) {\n    throw new Error('Invalid protocol id');\n  } else {\n    length += protocolId.length + 2;\n  }\n\n  // Must be a 1 byte number\n  if (!protocolVersion || 'number' !== typeof protocolVersion || protocolVersion > 255 || protocolVersion < 0) {\n    throw new Error('Invalid protocol version');\n  } else {\n    length += 1;\n  }\n\n  // ClientId might be omitted in 3.1.1, but only if cleanSession is set to 1\n  if ((typeof clientId === \"string\" || Buffer.isBuffer(clientId)) && (clientId || protocolVersion == 4) && (clientId || clean)) {\n    length += clientId.length + 2;\n  } else {\n    if (protocolVersion < 4) {\n      throw new Error('clientId must be supplied before 3.1.1');\n    }\n    if (clean == 0) {\n      throw new Error('clientId must be given if cleanSession set to 0');\n    }\n  }\n\n  // Must be a two byte number\n  if ('number' !== typeof keepalive || keepalive < 0 || keepalive > 65535) {\n    throw new Error('Invalid keepalive');\n  } else {\n    length += 2;\n  }\n\n  // Connect flags\n  length += 1;\n\n  // If will exists...\n  if (will) {\n    // It must be an object\n    if ('object' !== typeof will) {\n      throw new Error('Invalid will');\n    }\n    // It must have topic typeof string\n    if (!will.topic || 'string' !== typeof will.topic) {\n      throw new Error('Invalid will topic');\n    } else {\n      length += Buffer.byteLength(will.topic) + 2;\n    }\n\n    // Payload\n    if (will.payload && will.payload) {\n      if (will.payload.length >= 0) {\n        if ('string' === typeof will.payload) {\n          length += Buffer.byteLength(will.payload) + 2;\n        } else {\n          length += will.payload.length + 2;\n        }\n      } else {\n        throw new Error('Invalid will payload');\n      }\n    } else {\n      length += 2;\n    }\n  }\n\n  // Username\n  if (username) {\n    if (username.length) {\n      length += Buffer.byteLength(username) + 2;\n    } else {\n      throw new Error('Invalid username');\n    }\n  }\n\n  // Password\n  if (password) {\n    if (password.length) {\n      length += byteLength(password) + 2;\n    } else {\n      throw new Error('Invalid password');\n    }\n  }\n  var buffer = new Buffer(1 + calcLengthLength(length) + length),\n    pos = 0;\n\n  // Generate header\n  buffer.writeUInt8(protocol.codes['connect'] << protocol.CMD_SHIFT, pos++, true);\n\n  // Generate length\n  pos += writeLength(buffer, pos, length);\n\n  // Generate protocol ID\n  pos += writeStringOrBuffer(buffer, pos, protocolId);\n  buffer.writeUInt8(protocolVersion, pos++, true);\n\n  // Connect flags\n  var flags = 0;\n  flags |= username ? protocol.USERNAME_MASK : 0;\n  flags |= password ? protocol.PASSWORD_MASK : 0;\n  flags |= will && will.retain ? protocol.WILL_RETAIN_MASK : 0;\n  flags |= will && will.qos ? will.qos << protocol.WILL_QOS_SHIFT : 0;\n  flags |= will ? protocol.WILL_FLAG_MASK : 0;\n  flags |= clean ? protocol.CLEAN_SESSION_MASK : 0;\n  buffer.writeUInt8(flags, pos++, true);\n\n  // Keepalive\n  pos += writeNumber(buffer, pos, keepalive);\n\n  // Client ID\n  pos += writeStringOrBuffer(buffer, pos, clientId);\n\n  // Will\n  if (will) {\n    pos += writeString(buffer, pos, will.topic);\n    pos += writeStringOrBuffer(buffer, pos, will.payload);\n  }\n\n  // Username and password\n  if (username) pos += writeStringOrBuffer(buffer, pos, username);\n  if (password) pos += writeStringOrBuffer(buffer, pos, password);\n  return buffer;\n}\nfunction connack(opts) {\n  var opts = opts || {},\n    rc = opts.returnCode;\n\n  // Check return code\n  if ('number' !== typeof rc) throw new Error('Invalid return code');\n  var buffer = new Buffer(4),\n    pos = 0;\n  buffer.writeUInt8(protocol.codes['connack'] << protocol.CMD_SHIFT, pos++, true);\n  pos += writeLength(buffer, pos, 2);\n  buffer.writeUInt8(opts.sessionPresent && protocol.SESSIONPRESENT_MASK || 0, pos++, true);\n  buffer.writeUInt8(rc, pos++, true);\n  return buffer;\n}\nfunction publish(opts) {\n  var opts = opts || {},\n    dup = opts.dup ? protocol.DUP_MASK : 0,\n    qos = opts.qos,\n    retain = opts.retain ? protocol.RETAIN_MASK : 0,\n    topic = opts.topic,\n    payload = opts.payload || empty,\n    id = opts.messageId;\n  var length = 0;\n\n  // Topic must be a non-empty string or Buffer\n  if (typeof topic === \"string\") length += Buffer.byteLength(topic) + 2;else if (Buffer.isBuffer(topic)) length += topic.length + 2;else throw new Error('Invalid topic');\n\n  // get the payload length\n  if (!Buffer.isBuffer(payload)) {\n    length += Buffer.byteLength(payload);\n  } else {\n    length += payload.length;\n  }\n\n  // Message id must a number if qos > 0\n  if (qos && 'number' !== typeof id) {\n    throw new Error('Invalid message id');\n  } else if (qos) {\n    length += 2;\n  }\n  var buffer = new Buffer(1 + calcLengthLength(length) + length),\n    pos = 0;\n\n  // Header\n  buffer.writeUInt8(protocol.codes['publish'] << protocol.CMD_SHIFT | dup | qos << protocol.QOS_SHIFT | retain, pos++, true);\n\n  // Remaining length\n  pos += writeLength(buffer, pos, length);\n\n  // Topic\n  pos += writeStringOrBuffer(buffer, pos, topic);\n\n  // Message ID\n  if (qos > 0) {\n    pos += writeNumber(buffer, pos, id);\n  }\n\n  // Payload\n  if (!Buffer.isBuffer(payload)) {\n    writeStringNoPos(buffer, pos, payload);\n  } else {\n    writeBuffer(buffer, pos, payload);\n  }\n  return buffer;\n}\n\n/* Puback, pubrec, pubrel and pubcomp */\nfunction confirmation(opts) {\n  var opts = opts || {},\n    type = opts.cmd || 'puback',\n    id = opts.messageId,\n    dup = opts.dup && type === 'pubrel' ? protocol.DUP_MASK : 0,\n    qos = 0;\n  if (type === 'pubrel') qos = 1;\n\n  // Check message ID\n  if ('number' !== typeof id) throw new Error('Invalid message id');\n  var buffer = new Buffer(4),\n    pos = 0;\n\n  // Header\n  buffer[pos++] = protocol.codes[type] << protocol.CMD_SHIFT | dup | qos << protocol.QOS_SHIFT;\n\n  // Length\n  pos += writeLength(buffer, pos, 2);\n\n  // Message ID\n  pos += writeNumber(buffer, pos, id);\n  return buffer;\n}\nfunction subscribe(opts) {\n  var opts = opts || {},\n    dup = opts.dup ? protocol.DUP_MASK : 0,\n    qos = opts.qos || 0,\n    id = opts.messageId,\n    subs = opts.subscriptions;\n  var length = 0;\n\n  // Check mid\n  if ('number' !== typeof id) {\n    throw new Error('Invalid message id');\n  } else {\n    length += 2;\n  }\n  // Check subscriptions\n  if ('object' === typeof subs && subs.length) {\n    for (var i = 0; i < subs.length; i += 1) {\n      var topic = subs[i].topic,\n        qos = subs[i].qos;\n      if ('string' !== typeof topic) {\n        throw new Error('Invalid subscriptions - invalid topic');\n      }\n      if ('number' !== typeof qos) {\n        throw new Error('Invalid subscriptions - invalid qos');\n      }\n      length += Buffer.byteLength(topic) + 2 + 1;\n    }\n  } else {\n    throw new Error('Invalid subscriptions');\n  }\n  var buffer = new Buffer(1 + calcLengthLength(length) + length),\n    pos = 0;\n\n  // Generate header\n  buffer.writeUInt8(protocol.codes['subscribe'] << protocol.CMD_SHIFT | dup | 1 << protocol.QOS_SHIFT, pos++, true);\n\n  // Generate length\n  pos += writeLength(buffer, pos, length);\n\n  // Generate message ID\n  pos += writeNumber(buffer, pos, id);\n\n  // Generate subs\n  for (var i = 0; i < subs.length; i++) {\n    var sub = subs[i],\n      topic = sub.topic,\n      qos = sub.qos;\n\n    // Write topic string\n    pos += writeString(buffer, pos, topic);\n    // Write qos\n    buffer.writeUInt8(qos, pos++, true);\n  }\n  return buffer;\n}\nfunction suback(opts) {\n  var opts = opts || {},\n    id = opts.messageId,\n    granted = opts.granted;\n  var length = 0;\n\n  // Check message id\n  if ('number' !== typeof id) {\n    throw new Error('Invalid message id');\n  } else {\n    length += 2;\n  }\n  // Check granted qos vector\n  if ('object' === typeof granted && granted.length) {\n    for (var i = 0; i < granted.length; i += 1) {\n      if ('number' !== typeof granted[i]) {\n        throw new Error('Invalid qos vector');\n      }\n      length += 1;\n    }\n  } else {\n    throw new Error('Invalid qos vector');\n  }\n  var buffer = new Buffer(1 + calcLengthLength(length) + length),\n    pos = 0;\n\n  // Header\n  buffer.writeUInt8(protocol.codes['suback'] << protocol.CMD_SHIFT, pos++, true);\n\n  // Length\n  pos += writeLength(buffer, pos, length);\n\n  // Message ID\n  pos += writeNumber(buffer, pos, id);\n\n  // Subscriptions\n  for (var i = 0; i < granted.length; i++) {\n    buffer.writeUInt8(granted[i], pos++, true);\n  }\n  return buffer;\n}\nfunction unsubscribe(opts) {\n  var opts = opts || {},\n    id = opts.messageId,\n    dup = opts.dup ? protocol.DUP_MASK : 0,\n    unsubs = opts.unsubscriptions;\n  var length = 0;\n\n  // Check message id\n  if ('number' !== typeof id) {\n    throw new Error('Invalid message id');\n  } else {\n    length += 2;\n  }\n  // Check unsubs\n  if ('object' === typeof unsubs && unsubs.length) {\n    for (var i = 0; i < unsubs.length; i += 1) {\n      if ('string' !== typeof unsubs[i]) {\n        throw new Error('Invalid unsubscriptions');\n      }\n      length += Buffer.byteLength(unsubs[i]) + 2;\n    }\n  } else {\n    throw new Error('Invalid unsubscriptions');\n  }\n  var buffer = new Buffer(1 + calcLengthLength(length) + length),\n    pos = 0;\n\n  // Header\n  buffer[pos++] = protocol.codes['unsubscribe'] << protocol.CMD_SHIFT | dup | 1 << protocol.QOS_SHIFT;\n\n  // Length\n  pos += writeLength(buffer, pos, length);\n\n  // Message ID\n  pos += writeNumber(buffer, pos, id);\n\n  // Unsubs\n  for (var i = 0; i < unsubs.length; i++) {\n    pos += writeString(buffer, pos, unsubs[i]);\n  }\n  return buffer;\n}\nfunction emptyPacket(opts) {\n  var buf = new Buffer(2);\n  buf[0] = protocol.codes[opts.cmd] << 4;\n  buf[1] = 0;\n  return buf;\n}\n\n/**\n * calcLengthLength - calculate the length of the remaining\n * length field\n *\n * @api private\n */\nfunction calcLengthLength(length) {\n  if (length >= 0 && length < 128) {\n    return 1;\n  } else if (length >= 128 && length < 16384) {\n    return 2;\n  } else if (length >= 16384 && length < 2097152) {\n    return 3;\n  } else if (length >= 2097152 && length < 268435456) {\n    return 4;\n  } else {\n    return 0;\n  }\n}\n\n/**\n * writeLength - write an MQTT style length field to the buffer\n *\n * @param <Buffer> buffer - destination\n * @param <Number> pos - offset\n * @param <Number> length - length (>0)\n * @returns <Number> number of bytes written\n *\n * @api private\n */\n\nfunction writeLength(buffer, pos, length) {\n  var digit = 0,\n    origPos = pos;\n  do {\n    digit = length % 128 | 0;\n    length = length / 128 | 0;\n    if (length > 0) {\n      digit = digit | 0x80;\n    }\n    buffer.writeUInt8(digit, pos++, true);\n  } while (length > 0);\n  return pos - origPos;\n}\n\n/**\n * writeString - write a utf8 string to the buffer\n *\n * @param <Buffer> buffer - destination\n * @param <Number> pos - offset\n * @param <String> string - string to write\n * @return <Number> number of bytes written\n *\n * @api private\n */\n\nfunction writeString(buffer, pos, string) {\n  var strlen = Buffer.byteLength(string);\n  writeNumber(buffer, pos, strlen);\n  writeStringNoPos(buffer, pos + 2, string);\n  return strlen + 2;\n}\nfunction writeStringNoPos(buffer, pos, string) {\n  buffer.write(string, pos);\n}\n\n/**\n * write_buffer - write buffer to buffer\n *\n * @param <Buffer> buffer - dest buffer\n * @param <Number> pos - offset\n * @param <Buffer> src - source buffer\n * @return <Number> number of bytes written\n *\n * @api private\n */\n\nfunction writeBuffer(buffer, pos, src) {\n  src.copy(buffer, pos);\n  return src.length;\n}\n\n/**\n * writeNumber - write a two byte number to the buffer\n *\n * @param <Buffer> buffer - destination\n * @param <Number> pos - offset\n * @param <String> number - number to write\n * @return <Number> number of bytes written\n *\n * @api private\n */\nfunction writeNumber(buffer, pos, number) {\n  buffer.writeUInt8(number >> 8, pos, true);\n  buffer.writeUInt8(number & 0x00FF, pos + 1, true);\n  return 2;\n}\n\n/**\n * writeStringOrBuffer - write a String or Buffer with the its length prefix\n *\n * @param <Buffer> buffer - destination\n * @param <Number> pos - offset\n * @param <String> toWrite - String or Buffer\n * @return <Number> number of bytes written\n */\nfunction writeStringOrBuffer(buffer, pos, toWrite) {\n  var written = 0;\n  if (toWrite && typeof toWrite === 'string') {\n    written += writeString(buffer, pos + written, toWrite);\n  } else if (toWrite) {\n    written += writeNumber(buffer, pos + written, toWrite.length);\n    written += writeBuffer(buffer, pos + written, toWrite);\n  } else {\n    written += writeNumber(buffer, pos + written, 0);\n  }\n  return written;\n}\nfunction byteLength(bufOrString) {\n  if (Buffer.isBuffer(bufOrString)) {\n    return bufOrString.length;\n  } else {\n    return Buffer.byteLength(bufOrString);\n  }\n}\nmodule.exports = generate;","map":{"version":3,"names":["protocol","require","empty","Buffer","generate","packet","cmd","connect","connack","publish","confirmation","subscribe","suback","unsubscribe","emptyPacket","Error","opts","protocolId","protocolVersion","will","clean","keepalive","clientId","username","password","undefined","length","isBuffer","topic","byteLength","payload","buffer","calcLengthLength","pos","writeUInt8","codes","CMD_SHIFT","writeLength","writeStringOrBuffer","flags","USERNAME_MASK","PASSWORD_MASK","retain","WILL_RETAIN_MASK","qos","WILL_QOS_SHIFT","WILL_FLAG_MASK","CLEAN_SESSION_MASK","writeNumber","writeString","rc","returnCode","sessionPresent","SESSIONPRESENT_MASK","dup","DUP_MASK","RETAIN_MASK","id","messageId","QOS_SHIFT","writeStringNoPos","writeBuffer","type","subs","subscriptions","i","sub","granted","unsubs","unsubscriptions","buf","digit","origPos","string","strlen","write","src","copy","number","toWrite","written","bufOrString","module","exports"],"sources":["D:/UFPB/aquisição/hb/aquisicao/node_modules/mqtt-connection/node_modules/mqtt-packet/generate.js"],"sourcesContent":["\n'use strict';\n\nvar protocol = require('./constants')\n  , empty = new Buffer(0)\n\nfunction generate(packet) {\n\n  switch (packet.cmd) {\n    case 'connect':\n      return connect(packet)\n    case 'connack':\n      return connack(packet)\n    case 'publish':\n      return publish(packet)\n    case 'puback':\n    case 'pubrec':\n    case 'pubrel':\n    case 'pubcomp':\n    case 'unsuback':\n      return confirmation(packet)\n    case 'subscribe':\n      return subscribe(packet)\n    case 'suback':\n      return suback(packet)\n    case 'unsubscribe':\n      return unsubscribe(packet)\n    case 'pingreq':\n    case 'pingresp':\n    case 'disconnect':\n      return emptyPacket(packet)\n    default:\n      throw new Error('unknown command')\n  }\n}\n\nfunction connect(opts) {\n  var opts = opts || {}\n    , protocolId = opts.protocolId || 'MQTT'\n    , protocolVersion = opts.protocolVersion || 4\n    , will = opts.will\n    , clean = opts.clean\n    , keepalive = opts.keepalive || 0\n    , clientId = opts.clientId || \"\"\n    , username = opts.username\n    , password = opts.password\n\n  if (clean === undefined) {\n    clean = true\n  }\n\n  var length = 0\n\n  // Must be a string and non-falsy\n  if (!protocolId ||\n     (typeof protocolId !== \"string\" && !Buffer.isBuffer(protocolId))) {\n    throw new Error('Invalid protocol id')\n  } else {\n    length += protocolId.length + 2\n  }\n\n  // Must be a 1 byte number\n  if (!protocolVersion ||\n      'number' !== typeof protocolVersion ||\n      protocolVersion > 255 ||\n      protocolVersion < 0) {\n\n    throw new Error('Invalid protocol version')\n  } else {\n    length += 1\n  }\n\n  // ClientId might be omitted in 3.1.1, but only if cleanSession is set to 1\n  if ((typeof clientId === \"string\" || Buffer.isBuffer(clientId)) &&\n     (clientId || protocolVersion == 4) &&\n     (clientId || clean)) {\n\n    length += clientId.length + 2\n  } else {\n\n    if(protocolVersion < 4) {\n\n      throw new Error('clientId must be supplied before 3.1.1');\n    }\n\n    if(clean == 0) {\n\n      throw new Error('clientId must be given if cleanSession set to 0');\n    }\n  }\n\n  // Must be a two byte number\n  if ('number' !== typeof keepalive ||\n      keepalive < 0 ||\n      keepalive > 65535) {\n    throw new Error('Invalid keepalive')\n  } else {\n    length += 2\n  }\n\n  // Connect flags\n  length += 1\n\n  // If will exists...\n  if (will) {\n    // It must be an object\n    if ('object' !== typeof will) {\n      throw new Error('Invalid will')\n    }\n    // It must have topic typeof string\n    if (!will.topic || 'string' !== typeof will.topic) {\n      throw new Error('Invalid will topic')\n    } else {\n      length += Buffer.byteLength(will.topic) + 2\n    }\n\n    // Payload\n    if (will.payload && will.payload) {\n      if (will.payload.length >= 0) {\n        if ('string' === typeof will.payload) {\n          length += Buffer.byteLength(will.payload) + 2\n        } else {\n          length += will.payload.length + 2\n        }\n      } else {\n        throw new Error('Invalid will payload')\n      }\n    } else {\n      length += 2\n    }\n  }\n\n  // Username\n  if (username) {\n    if (username.length) {\n      length += Buffer.byteLength(username) + 2\n    } else {\n      throw new Error('Invalid username')\n    }\n  }\n\n  // Password\n  if (password) {\n    if (password.length) {\n      length += byteLength(password) + 2\n    } else {\n      throw new Error('Invalid password')\n    }\n  }\n\n  var buffer = new Buffer(1 + calcLengthLength(length) + length)\n    , pos = 0\n\n  // Generate header\n  buffer.writeUInt8(protocol.codes['connect'] << protocol.CMD_SHIFT, pos++, true)\n\n  // Generate length\n  pos += writeLength(buffer, pos, length)\n\n  // Generate protocol ID\n  pos += writeStringOrBuffer(buffer, pos, protocolId)\n  buffer.writeUInt8(protocolVersion, pos++, true)\n\n  // Connect flags\n  var flags = 0\n  flags |= username ? protocol.USERNAME_MASK : 0\n  flags |= password ? protocol.PASSWORD_MASK : 0\n  flags |= (will && will.retain) ? protocol.WILL_RETAIN_MASK : 0\n  flags |= (will && will.qos) ?\n    will.qos << protocol.WILL_QOS_SHIFT : 0\n  flags |= will ? protocol.WILL_FLAG_MASK : 0\n  flags |= clean ? protocol.CLEAN_SESSION_MASK : 0\n\n  buffer.writeUInt8(flags, pos++, true)\n\n  // Keepalive\n  pos += writeNumber(buffer, pos, keepalive)\n\n  // Client ID\n  pos += writeStringOrBuffer(buffer, pos, clientId)\n\n  // Will\n  if (will) {\n  \tpos += writeString(buffer, pos, will.topic)\n    pos += writeStringOrBuffer(buffer, pos, will.payload)\n  }\n\n  // Username and password\n  if (username)\n    pos += writeStringOrBuffer(buffer, pos, username)\n\n  if (password)\n    pos += writeStringOrBuffer(buffer, pos, password)\n\n  return buffer\n}\n\nfunction connack(opts) {\n  var opts = opts || {}\n    , rc = opts.returnCode;\n\n  // Check return code\n  if ('number' !== typeof rc)\n    throw new Error('Invalid return code');\n\n  var buffer = new Buffer(4)\n    , pos = 0;\n\n  buffer.writeUInt8(protocol.codes['connack'] << protocol.CMD_SHIFT, pos++, true);\n  pos += writeLength(buffer, pos, 2);\n  buffer.writeUInt8(opts.sessionPresent && protocol.SESSIONPRESENT_MASK || 0, pos++, true);\n  buffer.writeUInt8(rc, pos++, true);\n\n  return buffer;\n}\n\nfunction publish(opts) {\n  var opts = opts || {}\n    , dup = opts.dup ? protocol.DUP_MASK : 0\n    , qos = opts.qos\n    , retain = opts.retain ? protocol.RETAIN_MASK : 0\n    , topic = opts.topic\n    , payload = opts.payload || empty\n    , id = opts.messageId;\n\n  var length = 0;\n\n  // Topic must be a non-empty string or Buffer\n  if (typeof topic === \"string\")\n    length += Buffer.byteLength(topic) + 2;\n  else if (Buffer.isBuffer(topic))\n    length += topic.length + 2;\n  else\n    throw new Error('Invalid topic');\n\n  // get the payload length\n  if (!Buffer.isBuffer(payload)) {\n    length += Buffer.byteLength(payload);\n  } else {\n    length += payload.length;\n  }\n\n  // Message id must a number if qos > 0\n  if (qos && 'number' !== typeof id) {\n    throw new Error('Invalid message id')\n  } else if (qos) {\n    length += 2;\n  }\n\n  var buffer = new Buffer(1 + calcLengthLength(length) + length)\n    , pos = 0;\n\n  // Header\n  buffer.writeUInt8(\n    protocol.codes['publish'] << protocol.CMD_SHIFT |\n    dup |\n    qos << protocol.QOS_SHIFT |\n    retain, pos++, true);\n\n  // Remaining length\n  pos += writeLength(buffer, pos, length);\n\n  // Topic\n  pos += writeStringOrBuffer(buffer, pos, topic);\n\n  // Message ID\n  if (qos > 0) {\n    pos += writeNumber(buffer, pos, id);\n  }\n\n  // Payload\n  if (!Buffer.isBuffer(payload)) {\n    writeStringNoPos(buffer, pos, payload);\n  } else {\n    writeBuffer(buffer, pos, payload);\n  }\n\n  return buffer;\n}\n\n/* Puback, pubrec, pubrel and pubcomp */\nfunction confirmation(opts) {\n  var opts = opts || {}\n    , type = opts.cmd || 'puback'\n    , id = opts.messageId\n    , dup = (opts.dup && type === 'pubrel') ? protocol.DUP_MASK : 0\n    , qos = 0\n\n  if (type === 'pubrel')\n    qos = 1\n\n  // Check message ID\n  if ('number' !== typeof id)\n    throw new Error('Invalid message id');\n\n  var buffer = new Buffer(4)\n    , pos = 0;\n\n  // Header\n  buffer[pos++] =\n    protocol.codes[type] << protocol.CMD_SHIFT |\n    dup |\n    qos << protocol.QOS_SHIFT;\n\n  // Length\n  pos += writeLength(buffer, pos, 2);\n\n  // Message ID\n  pos += writeNumber(buffer, pos, id);\n\n  return buffer;\n}\n\nfunction subscribe(opts) {\n  var opts = opts || {}\n    , dup = opts.dup ? protocol.DUP_MASK : 0\n    , qos = opts.qos || 0\n    , id = opts.messageId\n    , subs = opts.subscriptions;\n\n  var length = 0;\n\n  // Check mid\n  if ('number' !== typeof id) {\n    throw new Error('Invalid message id');\n  } else {\n    length += 2;\n  }\n  // Check subscriptions\n  if ('object' === typeof subs && subs.length) {\n    for (var i = 0; i < subs.length; i += 1) {\n      var topic = subs[i].topic\n        , qos = subs[i].qos;\n\n      if ('string' !== typeof topic) {\n        throw new Error('Invalid subscriptions - invalid topic');\n      }\n      if ('number' !== typeof qos) {\n        throw new Error('Invalid subscriptions - invalid qos');\n      }\n\n      length += Buffer.byteLength(topic) + 2 + 1;\n    }\n  } else {\n    throw new Error('Invalid subscriptions');\n  }\n\n  var buffer = new Buffer(1 + calcLengthLength(length) + length)\n    , pos = 0;\n\n  // Generate header\n  buffer.writeUInt8(\n    protocol.codes['subscribe'] << protocol.CMD_SHIFT |\n    dup |\n    1 << protocol.QOS_SHIFT, pos++, true);\n\n  // Generate length\n  pos += writeLength(buffer, pos, length);\n\n  // Generate message ID\n  pos += writeNumber(buffer, pos, id);\n\n  // Generate subs\n  for (var i = 0; i < subs.length; i++) {\n    var sub = subs[i]\n      , topic = sub.topic\n      , qos = sub.qos;\n\n    // Write topic string\n    pos += writeString(buffer, pos, topic);\n    // Write qos\n    buffer.writeUInt8(qos, pos++, true);\n  }\n\n  return buffer;\n}\n\nfunction suback(opts) {\n  var opts = opts || {}\n    , id = opts.messageId\n    , granted = opts.granted;\n\n  var length = 0;\n\n  // Check message id\n  if ('number' !== typeof id) {\n    throw new Error('Invalid message id');\n  } else {\n    length += 2;\n  }\n  // Check granted qos vector\n  if ('object' === typeof granted && granted.length) {\n    for (var i = 0; i < granted.length; i += 1) {\n      if ('number' !== typeof granted[i]) {\n        throw new Error('Invalid qos vector');\n      }\n      length += 1;\n    }\n  } else {\n    throw new Error('Invalid qos vector');\n  }\n\n  var buffer = new Buffer(1 + calcLengthLength(length) + length)\n    , pos = 0;\n\n  // Header\n  buffer.writeUInt8(protocol.codes['suback'] << protocol.CMD_SHIFT, pos++, true);\n\n  // Length\n  pos += writeLength(buffer, pos, length);\n\n  // Message ID\n  pos += writeNumber(buffer, pos, id);\n\n  // Subscriptions\n  for (var i = 0; i < granted.length; i++) {\n    buffer.writeUInt8(granted[i], pos++, true);\n  }\n\n  return buffer;\n}\n\nfunction unsubscribe(opts) {\n  var opts = opts || {}\n    , id = opts.messageId\n    , dup = opts.dup ? protocol.DUP_MASK : 0\n    , unsubs = opts.unsubscriptions;\n\n  var length = 0;\n\n  // Check message id\n  if ('number' !== typeof id) {\n    throw new Error('Invalid message id');\n  } else {\n    length += 2;\n  }\n  // Check unsubs\n  if ('object' === typeof unsubs && unsubs.length) {\n    for (var i = 0; i < unsubs.length; i += 1) {\n      if ('string' !== typeof unsubs[i]) {\n        throw new Error('Invalid unsubscriptions');\n      }\n      length += Buffer.byteLength(unsubs[i]) + 2;\n    }\n  } else {\n    throw new Error('Invalid unsubscriptions');\n  }\n\n  var buffer = new Buffer(1 + calcLengthLength(length) + length)\n    , pos = 0;\n\n  // Header\n  buffer[pos++] =\n    protocol.codes['unsubscribe'] << protocol.CMD_SHIFT |\n    dup |\n    1 << protocol.QOS_SHIFT;\n\n  // Length\n  pos += writeLength(buffer, pos, length);\n\n  // Message ID\n  pos += writeNumber(buffer, pos, id);\n\n  // Unsubs\n  for (var i = 0; i < unsubs.length; i++) {\n    pos += writeString(buffer, pos, unsubs[i]);\n  }\n\n  return buffer;\n}\n\nfunction emptyPacket(opts) {\n  var buf = new Buffer(2);\n  buf[0] = protocol.codes[opts.cmd] << 4;\n  buf[1] = 0;\n  return buf;\n}\n\n/**\n * calcLengthLength - calculate the length of the remaining\n * length field\n *\n * @api private\n */\nfunction calcLengthLength(length) {\n  if (length >= 0 && length < 128) {\n    return 1\n  } else if (length >= 128 && length < 16384) {\n    return 2\n  } else if (length >= 16384 && length < 2097152) {\n    return 3\n  } else if (length >= 2097152 && length < 268435456) {\n    return 4\n  } else {\n    return 0\n  }\n}\n\n/**\n * writeLength - write an MQTT style length field to the buffer\n *\n * @param <Buffer> buffer - destination\n * @param <Number> pos - offset\n * @param <Number> length - length (>0)\n * @returns <Number> number of bytes written\n *\n * @api private\n */\n\nfunction writeLength(buffer, pos, length) {\n  var digit = 0\n    , origPos = pos\n\n  do {\n    digit = length % 128 | 0\n    length = length / 128 | 0\n    if (length > 0) {\n        digit = digit | 0x80\n    }\n    buffer.writeUInt8(digit, pos++, true)\n  } while (length > 0)\n\n  return pos - origPos\n}\n\n/**\n * writeString - write a utf8 string to the buffer\n *\n * @param <Buffer> buffer - destination\n * @param <Number> pos - offset\n * @param <String> string - string to write\n * @return <Number> number of bytes written\n *\n * @api private\n */\n\nfunction writeString(buffer, pos, string) {\n  var strlen = Buffer.byteLength(string)\n  writeNumber(buffer, pos, strlen)\n\n  writeStringNoPos(buffer, pos + 2, string)\n\n  return strlen + 2\n}\n\nfunction writeStringNoPos(buffer, pos, string) {\n  buffer.write(string, pos)\n}\n\n/**\n * write_buffer - write buffer to buffer\n *\n * @param <Buffer> buffer - dest buffer\n * @param <Number> pos - offset\n * @param <Buffer> src - source buffer\n * @return <Number> number of bytes written\n *\n * @api private\n */\n\nfunction writeBuffer(buffer, pos, src) {\n  src.copy(buffer, pos)\n  return src.length\n}\n\n/**\n * writeNumber - write a two byte number to the buffer\n *\n * @param <Buffer> buffer - destination\n * @param <Number> pos - offset\n * @param <String> number - number to write\n * @return <Number> number of bytes written\n *\n * @api private\n */\nfunction writeNumber(buffer, pos, number) {\n  buffer.writeUInt8(number >> 8, pos, true)\n  buffer.writeUInt8(number & 0x00FF, pos + 1, true)\n\n  return 2\n}\n\n/**\n * writeStringOrBuffer - write a String or Buffer with the its length prefix\n *\n * @param <Buffer> buffer - destination\n * @param <Number> pos - offset\n * @param <String> toWrite - String or Buffer\n * @return <Number> number of bytes written\n */\nfunction writeStringOrBuffer(buffer, pos, toWrite) {\n  var written = 0\n\n  if (toWrite && typeof toWrite === 'string') {\n    written += writeString(buffer, pos + written, toWrite)\n  } else if (toWrite) {\n    written += writeNumber(buffer, pos + written, toWrite.length)\n    written += writeBuffer(buffer, pos + written, toWrite)\n  } else {\n    written += writeNumber(buffer, pos + written, 0)\n  }\n\n  return written\n}\n\nfunction byteLength(bufOrString) {\n  if (Buffer.isBuffer(bufOrString)) {\n    return bufOrString.length\n  } else {\n    return Buffer.byteLength(bufOrString)\n  }\n}\n\nmodule.exports = generate\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}